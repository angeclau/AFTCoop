% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cv.aftcoop_fold.R
\name{cv.aftcoop_fold}
\alias{cv.aftcoop_fold}
\title{Compute Cross-validation for a Single Fold in AFT Cooperative Estimation}
\usage{
cv.aftcoop_fold(
  folds,
  k,
  X,
  Xtilde,
  Y,
  delta,
  sigma = NULL,
  lambda = NULL,
  rho = NULL,
  nfolds = NULL,
  model
)
}
\arguments{
\item{folds}{List object containing fold information from cvTools::cvFolds}

\item{k}{Integer indicating the current fold number}

\item{X}{Matrix of combined covariates}

\item{Xtilde}{Matrix of cooperative term covariates for cooperative estimation}

\item{Y}{Vector of log observed survival times or log censored times (response variable in log scale)}

\item{delta}{Vector of censoring indicators (1 for event, 0 for censored)}

\item{sigma}{Scale parameter for the AFT model}

\item{lambda}{Vector of regularization parameters}

\item{rho}{Cooperation parameter}

\item{nfolds}{Number of cross-validation folds}

\item{model}{Character string specifying the AFT model type}
}
\value{
A list containing:
\itemize{
\item preds: Matrix of predictions for test set observations (rows) across
different lambda values (columns)
\item cv.err.obj: Vector of prediction errors for each lambda value
}
}
\description{
Internal function that performs cross-validation computations for a single fold
in the cooperative Accelerated Failure Time (AFT) model estimation. This function
handles data standardization, model fitting, and prediction error calculation
for one specific fold of k-fold cross-validation.
}
\details{
The function performs the following steps for a single fold:
\itemize{
\item Splits data into training and test sets based on fold indices
\item Standardizes both X and Xtilde matrices using training set statistics
\item Computes the cooperative term using standardized Xtilde
\item For each lambda value:
\itemize{
\item Fits the model using proximal gradient descent
\item Computes predictions on the test set
\item Calculates prediction error
}
}
}
\note{
Last change 03/04/2025
}
\section{Implementation Details}{

\itemize{
\item Uses efficient matrix operations (crossprod instead of t(X) \%*\% X)
\item Implements warm starts for beta initialization across lambda values
\item Handles standardization internally to ensure proper scaling
}
}

\seealso{
\code{\link{cv.coop}} for the main cross-validation function
\code{\link{proxGD.coop}} for the underlying model fitting function
}
\keyword{internal}
